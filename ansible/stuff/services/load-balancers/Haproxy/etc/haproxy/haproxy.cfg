#---------------------------------------------------------------------
# Example configuration for a possible web application.  See the
# full configuration options online.
#
#   http://haproxy.1wt.eu/download/1.4/doc/configuration.txt
#
#---------------------------------------------------------------------

#---------------------------------------------------------------------
# Global settings
#---------------------------------------------------------------------
global
# to have these messages end up in /var/log/haproxy.log you will
# need to:
#
# 1) configure syslog to accept network log events.  This is done
#    by adding the '-r' option to the SYSLOGD_OPTIONS in
#    /etc/sysconfig/syslog
#
# 2) configure local2 events to go to the /var/log/haproxy.log
#   file. A line like the following can be added to
#   /etc/sysconfig/syslog
#
#    local2.*                       /var/log/haproxy.log
#
log         127.0.0.1 local2

chroot      /var/lib/haproxy
pidfile     /var/run/haproxy.pid
maxconn     4000
##user        haproxy
##group       haproxy
daemon

# turn on stats unix socket
stats socket /var/lib/haproxy/stats

#---------------------------------------------------------------------
# common defaults that all the 'listen' and 'backend' sections will
# use if not designated in their block
#---------------------------------------------------------------------
#---------------------------------------------------------------------
defaults
mode                    http
#mode                    tcp
log                     global
#option                  httplog
#option                  tcplog
option                  dontlognull
option http-server-close
#option forwardfor       except 127.0.0.0/8
option                  redispatch
retries                 3
timeout http-request    14s
timeout queue           10s
timeout connect         10s
timeout client          2m
timeout server          2m
timeout http-keep-alive 10s
timeout check           10s
maxconn                 30

#---------------------------------------------------------------------
# main frontend which proxys to the backends
#---------------------------------------------------------------------
#frontend  main *:5000
#acl url_static       path_beg       -i /static /images /javascript /stylesheets
#acl url_static       path_end       -i .jpg .gif .png .css .js

#use_backend static          if url_static
#default_backend             app

#---------------------------------------------------------------------
# static backend for serving up images, stylesheets and such
#---------------------------------------------------------------------
#backend static
#balance     roundrobin
#server      static 127.0.0.1:4331

#---------------------------------------------------------------------
# round robin balancing between the various backends
#---------------------------------------------------------------------
#backend app
#balance     roundrobin(source) => source is for keeping session
#server  app1 127.0.0.1:5001
#server  app2 127.0.0.1:5002
#server  app3 127.0.0.1:5003
#server  app4 127.0.0.1:5004

#---------------------------------------------------------------------
#myConfig
listen stats
  bind :{{port_ha_proxy_web_console}}
  stats enable
  stats uri /monitor
  stats refresh 5s

# Weights
# sum all weight and take base and divide by sum - this is load factor (in %)

#---------------------------------------------------------------------
#TCP
frontend graylog-tcp
  bind *:{{port_graylog_gelf_tcp}}
  mode tcp
  default_backend graylog-tcp-backend

backend graylog-tcp-backend
  mode tcp
  balance source
    server {{environment_type}}-Graylog-1 {{graylog_1_IP}}:{{port_graylog_gelf_tcp}} maxconn 20 check weight 33
    server {{environment_type}}-Graylog-2 {{graylog_2_IP}}:{{port_graylog_gelf_tcp}} maxconn 20 check weight 33
    server {{environment_type}}-Graylog-3 {{graylog_3_IP}}:{{port_graylog_gelf_tcp}} maxconn 20 check weight 33

frontend rsyslog-tcp-{{port_rsyslog_514}}
  bind *:{{port_rsyslog_514}}
  mode tcp
    default_backend rsyslog-tcp-backend-{{port_rsyslog_514}}
     
frontend rsyslog-tcp-{{port_rsyslog_1514}}
  bind *:{{port_rsyslog_1514}}
  mode tcp
  default_backend rsyslog-tcp-backend-{{port_rsyslog_514}}

backend rsyslog-tcp-backend-{{port_rsyslog_514}}
  mode tcp
  balance source
    server {{environment_type}}-Graylog-1 {{graylog_1_IP}}:{{port_rsyslog_514}} maxconn 20 check weight 33
    server {{environment_type}}-Graylog-2 {{graylog_2_IP}}:{{port_rsyslog_514}} maxconn 20 check weight 33
    server {{environment_type}}-Graylog-3 {{graylog_3_IP}}:{{port_rsyslog_514}} maxconn 20 check weight 33

#---------------------------------------------------------------------
#HTTP
frontend garylog-http
  bind *:{{port_graylog_http}}
  mode http
  default_backend graylog-http-backend

backend graylog-http-backend
  mode http
  balance roundrobin
    server {{environment_type}}-Graylog-1 {{graylog_1_IP}}:{{port_graylog_http}} maxconn 20 check weight 33 inter 2s fall 3 downinter 2s rise 5
    server {{environment_type}}-Graylog-2 {{graylog_2_IP}}:{{port_graylog_http}} maxconn 20 check weight 33 inter 2s fall 3 downinter 2s rise 5
    server {{environment_type}}-Graylog-3 {{graylog_3_IP}}:{{port_graylog_http}} maxconn 20 check weight 33 inter 2s fall 3 downinter 2s rise 5
    
frontend elasticsearch-http
  bind *:{{port_elasticsearch_http}}
  mode http
  default_backend elasticsearch-http-backend

backend elasticsearch-http-backend
  mode http
  balance roundrobin
    server {{environment_type}}-ElasticSearch-1 {{elasticsearch_1_IP}}:{{port_elasticsearch_http}} maxconn 20 check weight 33 inter 2s fall 3 downinter 2s rise 5
    server {{environment_type}}-ElasticSearch-2 {{elasticsearch_2_IP}}:{{port_elasticsearch_http}} maxconn 20 check weight 33 inter 2s fall 3 downinter 2s rise 5
    server {{environment_type}}-ElasticSearch-3 {{elasticsearch_3_IP}}:{{port_elasticsearch_http}} maxconn 20 check weight 33 inter 2s fall 3 downinter 2s rise 5
    server {{environment_type}}-ElasticSearch-4 {{elasticsearch_3_IP}}:{{port_elasticsearch_http}} maxconn 20 check weight 33 inter 2s fall 3 downinter 2s rise 5
    server {{environment_type}}-ElasticSearch-5 {{elasticsearch_3_IP}}:{{port_elasticsearch_http}} maxconn 20 check weight 33 inter 2s fall 3 downinter 2s rise 5

# check server state every (inter 2s)
# in case 3 attempts are failed - mark server as excluded (fall 3)
# check excluded server every 2s (downinter 2s)
# if excluded server is up again and 5 probes are OK, mark it as included (raise 5)
# if above settings are not defined then default value is being taken
